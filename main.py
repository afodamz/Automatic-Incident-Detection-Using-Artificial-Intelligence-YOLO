# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSlot
from incident import Ui_IncidentDetection
from count import Ui_VehicleCount



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(519, 262)
        MainWindow.setMaximumSize(QtCore.QSize(519, 262))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../afodamz documents/doc Pics/Afolabi-Oluwadamilola.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("QLabel#main_label:{\n"
"font: bold 18pt;\n"
"}\n"
"QPushButton {\n"
"    padding:5px;\n"
"     background-color: yellow;\n"
" }\n"
" QPushButton:pressed {\n"
"     background-color: rgb(224, 0, 0);     \n"
" }\n"
" QPushButton:hover {\n"
"     background-color: rgb(224, 255, 0);\n"
" }")
        self.main_page = QtWidgets.QWidget(MainWindow)
        self.main_page.setMinimumSize(QtCore.QSize(519, 218))
        self.main_page.setMaximumSize(QtCore.QSize(519, 218))
        self.main_page.setAutoFillBackground(False)
        self.main_page.setStyleSheet("QLabel#main_label:{\n"
"font: bold 18pt;\n"
"}\n"
"background-color: rgb(211, 215, 207);")
        self.main_page.setObjectName("main_page")
        self.gridLayout = QtWidgets.QGridLayout(self.main_page)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalFrame = QtWidgets.QFrame(self.main_page)
        self.verticalFrame.setStyleSheet("QLabel#main_label:{\n"
"font: bold 18pt;\n"
"}\n"
"QFrame: {\n"
"background-color: rgb(211, 215, 207);\n"
"}\n"
"")
        self.verticalFrame.setObjectName("verticalFrame")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalFrame)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.main_label = QtWidgets.QLabel(self.verticalFrame)
        self.main_label.setMaximumSize(QtCore.QSize(501, 134))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.main_label.setFont(font)
        self.main_label.setAlignment(QtCore.Qt.AlignCenter)
        self.main_label.setObjectName("main_label")
        self.verticalLayout_4.addWidget(self.main_label)
        self.verticalFrame1 = QtWidgets.QFrame(self.verticalFrame)
        self.verticalFrame1.setStyleSheet("QPushButton {\n"
"    padding:5px;\n"
"     background-color: rgb(252, 233, 79);\n"
" }\n"
" QPushButton:hover {\n"
"     background-color: rgb(224, 255, 0);\n"
" }\n"
" QPushButton:hover:!pressed{\n"
"     background-color: rgb(224, 0, 0);     \n"
" }\n"
"")
        self.verticalFrame1.setObjectName("verticalFrame1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.verticalFrame1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.incident_detection = QtWidgets.QPushButton(self.verticalFrame1)
        self.incident_detection.setMinimumSize(QtCore.QSize(80, 60))
        self.incident_detection.setMaximumSize(QtCore.QSize(400, 60))
        self.incident_detection.setStyleSheet("")
        self.incident_detection.setObjectName("incident_detection")
        self.incident_detection.clicked.connect(self.openIncidentWindow)
        self.horizontalLayout.addWidget(self.incident_detection)
        self.vehicle_count = QtWidgets.QPushButton(self.verticalFrame1)
        self.vehicle_count.setMinimumSize(QtCore.QSize(80, 60))
        self.vehicle_count.setMaximumSize(QtCore.QSize(400, 60))
        self.vehicle_count.setObjectName("vehicle_count")
        self.vehicle_count.clicked.connect(self.openVehicleCountWindow)
        self.horizontalLayout.addWidget(self.vehicle_count)
        self.verticalLayout_4.addWidget(self.verticalFrame1)
        self.gridLayout.addWidget(self.verticalFrame, 5, 1, 1, 1)
        MainWindow.setCentralWidget(self.main_page)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 519, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionExit.triggered.connect(self.closeEvent)
        self.actionEdit = QtWidgets.QAction(MainWindow)
        self.actionEdit.setObjectName("actionEdit")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionEdit)
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Msc Project"))
        self.main_label.setText(_translate("MainWindow", "MSC PROJECT"))
        self.incident_detection.setText(_translate("MainWindow", "INCIDENT DETECTION"))
        self.vehicle_count.setText(_translate("MainWindow", "VEHICLE COUNT"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionEdit.setText(_translate("MainWindow", "Edit"))

    def openIncidentWindow(self):
        self.IncidentDetection = QtWidgets.QMainWindow()
        self.ui = Ui_IncidentDetection()
        self.ui.setupUi(self.IncidentDetection)
        self.IncidentDetection.show()
        # self.statusBar().showMessage("Switched to window 1")
        # MainWindow = QtWidgets.QMainWindow()
        # ui = Ui_IncidentDetection()
        # ui.setupUi(MainWindow)
        # MainWindow.show()

    def openVehicleCountWindow(self):
        self.VehicleCount = QtWidgets.QMainWindow()
        self.ui = Ui_VehicleCount()
        self.ui.setupUi(self.VehicleCount)
        self.VehicleCount.show()

    def closeEvent(self, event):
        import sys
        # app = QtWidgets.QApplication(sys.argv)
        # quit_msg = "Are you sure you want to exit the program?"
        # reply = QtWidgets.QMessageBox.question(self.main_page, 'Quit?', quit_msg, QtWidgets.QMessageBox.Yes |
        #                                    QtWidgets.QMessageBox.No | QtWidgets.QMessageBox.Cancel,
        #     QtWidgets.QMessageBox.Yes)
        # if reply == QtWidgets.QMessageBox.Yes:
        #     # event.accept()
        #     sys.exit()
        # else:
        #     # event.ignore()
        #     pass
        close = QtWidgets.QMessageBox()
        close.setText("Are You sure you want to exit?")
        close.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.Cancel)
        close = close.exec()

        if close == QtWidgets.QMessageBox.Yes:
            sys.exit()
            # event.accept()
        else:
            pass
            # event.ignore()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
